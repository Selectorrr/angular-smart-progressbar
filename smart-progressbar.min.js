"use strict";angular.module("angular-smart-progressbar",[]).config(["$provide",function($provide){function debounce(func,wait,options){function invokeFunc(time){const args=lastArgs,thisArg=lastThis;return lastArgs=lastThis=void 0,lastInvokeTime=time,result=func.apply(thisArg,args)}function leadingEdge(time){return lastInvokeTime=time,timerId=setTimeout(timerExpired,wait),leading?invokeFunc(time):result}function remainingWait(time){const timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,result=wait-timeSinceLastCall;return maxing?nativeMin(result,maxWait-timeSinceLastInvoke):result}function shouldInvoke(time){const timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;return void 0===lastCallTime||timeSinceLastCall>=wait||0>timeSinceLastCall||maxing&&timeSinceLastInvoke>=maxWait}function timerExpired(){const time=Date.now();return shouldInvoke(time)?trailingEdge(time):void(timerId=setTimeout(timerExpired,remainingWait(time)))}function trailingEdge(time){return timerId=void 0,trailing&&lastArgs?invokeFunc(time):(lastArgs=lastThis=void 0,result)}function cancel(){void 0!==timerId&&clearTimeout(timerId),lastInvokeTime=0,lastArgs=lastCallTime=lastThis=timerId=void 0}function flush(){return void 0===timerId?result:trailingEdge(Date.now())}function debounced(){const time=Date.now(),isInvoking=shouldInvoke(time);if(lastArgs=arguments,lastThis=this,lastCallTime=time,isInvoking){if(void 0===timerId)return leadingEdge(lastCallTime);if(maxing)return timerId=setTimeout(timerExpired,wait),invokeFunc(lastCallTime)}return void 0===timerId&&(timerId=setTimeout(timerExpired,wait)),result}var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=!1,maxing=!1,trailing=!0;if("function"!=typeof func)throw new TypeError("Expected a function");return wait=wait||0,options&&(leading=!!options.leading,maxing="maxWait"in options,maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait,trailing="trailing"in options?!!options.trailing:trailing),debounced.cancel=cancel,debounced.flush=flush,debounced}$provide.decorator("ngClickDirective",["$delegate","$parse",function($delegate,$parse){return $delegate[0].compile=function($element,attr){var fn=$parse(attr.ngClick);return fn=debounce(fn,500,{leading:!0,trailing:!1}),function(scope,element){element.on("click",function(event){var callback=function(){fn(scope,{$event:event})};scope.$apply(callback)})}},$delegate}]),$provide.decorator("$http",["$delegate","_AspPromiseTracker",function($delegate,_AspPromiseTracker){return angular.forEach("get post put delete jsonp head patch".split(" "),function(method){var original=$delegate[method];$delegate[method]=function(msg){var promise=original.apply($delegate,arguments);return _AspPromiseTracker.reset({promises:[promise],delay:450,minDuration:700}),promise}}),$delegate}])}]).service("_AspPromiseTracker",["$timeout","$q",function($timeout,$q){var tracker={};tracker.promises=[],tracker.delayPromise=null,tracker.durationPromise=null,tracker.delayJustFinished=!1,tracker.reset=function(options){tracker.minDuration=options.minDuration,tracker.promises=[],angular.forEach(options.promises,function(p){p&&!p.$aspFulfilled&&addPromiseLikeThing(p)}),0!==tracker.promises.length&&(tracker.delayJustFinished=!1,options.delay&&(tracker.delayPromise=$timeout(function(){tracker.delayPromise=null,tracker.delayJustFinished=!0},parseInt(options.delay,10))),options.minDuration&&(tracker.durationPromise=$timeout(function(){tracker.durationPromise=null},parseInt(options.minDuration,10)+(options.delay?parseInt(options.delay,10):0))))},tracker.isPromise=function(promiseThing){var then=promiseThing&&(promiseThing.then||promiseThing.$then||promiseThing.$promise&&promiseThing.$promise.then);return"undefined"!=typeof then},tracker.callThen=function(promiseThing,success,error){var promise;promiseThing.then||promiseThing.$then?promise=promiseThing:promiseThing.$promise?promise=promiseThing.$promise:promiseThing.denodeify&&(promise=$q.when(promiseThing));var then=promise.then||promise.$then;then.call(promise,success,error)};var addPromiseLikeThing=function(promise){if(!tracker.isPromise(promise))throw new Error("asp expects a promise (or something that has a .promise or .$promise");-1===tracker.promises.indexOf(promise)&&(tracker.promises.push(promise),tracker.callThen(promise,function(){promise.$aspFulfilled=!0,-1!==tracker.promises.indexOf(promise)&&tracker.promises.splice(tracker.promises.indexOf(promise),1)},function(){promise.$aspFulfilled=!0,-1!==tracker.promises.indexOf(promise)&&tracker.promises.splice(tracker.promises.indexOf(promise),1)}))};return tracker.active=function(){return tracker.delayPromise?!1:tracker.delayJustFinished?(tracker.delayJustFinished=!1,0===tracker.promises.length&&(tracker.durationPromise=null),tracker.promises.length>0):tracker.durationPromise?!0:tracker.promises.length>0},tracker}]).run(function($rootScope,_AspPromiseTracker){var progress=angular.element("<div></div>");progress.css({position:"absolute",top:"0",bottom:"0",left:"0",right:"0","z-index":"2147483647",visibility:"hidden",transition:"all 0.5s ease","background-color":"black"}),angular.element(document.body).append(progress),$rootScope.$watch(_AspPromiseTracker.active,function(isActive){isActive?progress.css({visibility:"visible",opacity:"0.5"}):progress.css({visibility:"hidden",opacity:"0"})})});